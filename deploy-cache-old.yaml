apiVersion: v1
kind: ConfigMap
metadata:
  name: s3-cache-config
  namespace: altinity-cloud-managed-clickhouse
data:
  nginx.conf: |
    
    
    proxy_temp_path /data/nginx/proxy_tmp 1 2;
    proxy_cache_path /data/nginx/cache 
      levels=1:2 
      keys_zone=default:500m 
      max_size=450g 
      inactive=30d
      use_temp_path=off;

    log_format rt_cache '$remote_addr - $upstream_cache_status [$time_local]  '
                        '"$request" $status $body_bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    add_header X-Cache-Status $upstream_cache_status;
    
    access_log /var/log/nginx/access.log rt_cache;
    
    resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
    server {
      listen 8080;      

      location / {
        proxy_http_version 1.1;
        proxy_set_header Host s3.us-east-2.amazonaws.com;
        proxy_set_header Authorization $http_authorization;
        proxy_set_header Connection '';

        proxy_cache default;
        proxy_cache_valid 200 30d;
        proxy_cache_valid 404  5m;
        proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;

        add_header X-Cache-Status $upstream_cache_status always;

        set $s3_host 's3.us-east-2.amazonaws.com';
        proxy_pass https://$s3_host;
      }
  
      location = /health {
          access_log off;
          add_header 'Content-Type' 'application/json';
          return 200 '{"status":"UP"}';
      }
    }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nginx-cache-pvc
  namespace: altinity-cloud-managed-clickhouse
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: s3-cache
  namespace: altinity-cloud-managed-clickhouse
spec:
  replicas: 1
  selector:
    matchLabels:
      app: s3-cache
  template:
    metadata:
      labels:
        app: s3-cache
    spec:
      nodeSelector:
        node.kubernetes.io/instance-type: m7gd.2xlarge
      tolerations:
        - key: "dedicated"
          operator: "Equal"
          value: "s3-cache"
          effect : "NoSchedule"
      containers:
        - name: nginx
          image: nginx:1.27.4
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/conf.d/cache.conf
              subPath: nginx.conf
            - name: cache
              mountPath: /data/nginx
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: s3-cache-config
        - name: cache
          persistentVolumeClaim:
              claimName: nginx-cache-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: s3-cache
  namespace: altinity-cloud-managed-clickhouse
spec:
  selector:
    app: s3-cache
  ports:
    - protocol: TCP
      port: 80
      targetPort: http